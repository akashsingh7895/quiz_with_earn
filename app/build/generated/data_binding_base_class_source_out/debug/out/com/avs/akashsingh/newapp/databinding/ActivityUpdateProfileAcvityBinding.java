// Generated by view binder compiler. Do not edit!
package com.avs.akashsingh.newapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.avs.akashsingh.newapp.R;
import com.google.android.material.appbar.AppBarLayout;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateProfileAcvityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText cnfNewPassword;

  @NonNull
  public final EditText name;

  @NonNull
  public final EditText newPassword;

  @NonNull
  public final EditText oldPassword;

  @NonNull
  public final EditText phone;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final TextView textView18;

  @NonNull
  public final Button updateButton;

  @NonNull
  public final AppBarLayout userInfoAppBar;

  @NonNull
  public final Toolbar userInfoToolBar;

  private ActivityUpdateProfileAcvityBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText cnfNewPassword, @NonNull EditText name, @NonNull EditText newPassword,
      @NonNull EditText oldPassword, @NonNull EditText phone, @NonNull CircleImageView profileImage,
      @NonNull TextView textView18, @NonNull Button updateButton,
      @NonNull AppBarLayout userInfoAppBar, @NonNull Toolbar userInfoToolBar) {
    this.rootView = rootView;
    this.cnfNewPassword = cnfNewPassword;
    this.name = name;
    this.newPassword = newPassword;
    this.oldPassword = oldPassword;
    this.phone = phone;
    this.profileImage = profileImage;
    this.textView18 = textView18;
    this.updateButton = updateButton;
    this.userInfoAppBar = userInfoAppBar;
    this.userInfoToolBar = userInfoToolBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateProfileAcvityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateProfileAcvityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_profile_acvity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateProfileAcvityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cnf_new_password;
      EditText cnfNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (cnfNewPassword == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.new_password;
      EditText newPassword = ViewBindings.findChildViewById(rootView, id);
      if (newPassword == null) {
        break missingId;
      }

      id = R.id.old_password;
      EditText oldPassword = ViewBindings.findChildViewById(rootView, id);
      if (oldPassword == null) {
        break missingId;
      }

      id = R.id.phone;
      EditText phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.textView18;
      TextView textView18 = ViewBindings.findChildViewById(rootView, id);
      if (textView18 == null) {
        break missingId;
      }

      id = R.id.update_button;
      Button updateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateButton == null) {
        break missingId;
      }

      id = R.id.userInfoAppBar;
      AppBarLayout userInfoAppBar = ViewBindings.findChildViewById(rootView, id);
      if (userInfoAppBar == null) {
        break missingId;
      }

      id = R.id.userInfoToolBar;
      Toolbar userInfoToolBar = ViewBindings.findChildViewById(rootView, id);
      if (userInfoToolBar == null) {
        break missingId;
      }

      return new ActivityUpdateProfileAcvityBinding((ConstraintLayout) rootView, cnfNewPassword,
          name, newPassword, oldPassword, phone, profileImage, textView18, updateButton,
          userInfoAppBar, userInfoToolBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
