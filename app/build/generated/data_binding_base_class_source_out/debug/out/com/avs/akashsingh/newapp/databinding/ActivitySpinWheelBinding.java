// Generated by view binder compiler. Do not edit!
package com.avs.akashsingh.newapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.avs.akashsingh.newapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySpinWheelBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final TextView spinAvail;

  @NonNull
  public final ImageView spinBtn;

  @NonNull
  public final ImageView spinPin;

  @NonNull
  public final ImageView spinWheel;

  @NonNull
  public final TextView texttool;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView totalSpin;

  @NonNull
  public final View view;

  private ActivitySpinWheelBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView backButton, @NonNull TextView spinAvail, @NonNull ImageView spinBtn,
      @NonNull ImageView spinPin, @NonNull ImageView spinWheel, @NonNull TextView texttool,
      @NonNull Toolbar toolbar, @NonNull TextView totalSpin, @NonNull View view) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.spinAvail = spinAvail;
    this.spinBtn = spinBtn;
    this.spinPin = spinPin;
    this.spinWheel = spinWheel;
    this.texttool = texttool;
    this.toolbar = toolbar;
    this.totalSpin = totalSpin;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySpinWheelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySpinWheelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_spin_wheel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySpinWheelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.spinAvail;
      TextView spinAvail = ViewBindings.findChildViewById(rootView, id);
      if (spinAvail == null) {
        break missingId;
      }

      id = R.id.spin_btn;
      ImageView spinBtn = ViewBindings.findChildViewById(rootView, id);
      if (spinBtn == null) {
        break missingId;
      }

      id = R.id.spin_pin;
      ImageView spinPin = ViewBindings.findChildViewById(rootView, id);
      if (spinPin == null) {
        break missingId;
      }

      id = R.id.spin_wheel;
      ImageView spinWheel = ViewBindings.findChildViewById(rootView, id);
      if (spinWheel == null) {
        break missingId;
      }

      id = R.id.texttool;
      TextView texttool = ViewBindings.findChildViewById(rootView, id);
      if (texttool == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.total_spin;
      TextView totalSpin = ViewBindings.findChildViewById(rootView, id);
      if (totalSpin == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new ActivitySpinWheelBinding((ConstraintLayout) rootView, backButton, spinAvail,
          spinBtn, spinPin, spinWheel, texttool, toolbar, totalSpin, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
